{"mappings":"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","sources":["src/modules/highscore.js","src/main.js","src/modules/game.js"],"sourcesContent":["async function getPlayersAndScore() {\r\n  const firebaseUrl = `https://mp1-test-caf8c-default-rtdb.europe-west1.firebasedatabase.app/.json`;\r\n  const response = await fetch(firebaseUrl);\r\n  const data = await response.json();\r\n  return Object.values(data);\r\n}\r\n\r\nfunction displayPlayersAndScore(data) {\r\n  const playerCard = document.querySelector('.playerCard');\r\n  playerCard.innerHTML = '';\r\n\r\n  data.forEach((entry) => { \r\n    const card = document.createElement('div');\r\n    card.classList.add('card');\r\n    playerCard.append(card);\r\n\r\n    const name = document.createElement('h2');\r\n    name.innerText = `Player: ${entry.a.name}`;\r\n    card.append(name);\r\n\r\n    const showScore = document.createElement('p');\r\n    showScore.innerText = `Score: ${entry.b.score}`;\r\n    card.append(showScore);\r\n  });\r\n}\r\n\r\ngetPlayersAndScore().then(displayPlayersAndScore);\r\n\r\nasync function addNewPlayerAndScore(player, score) {\r\n  const firebaseUrl = `https://mp1-test-caf8c-default-rtdb.europe-west1.firebasedatabase.app/.json`;\r\n\r\n  const data = await getPlayersAndScore();\r\n\r\n  const existingplayerIndex = data.findIndex(entry => entry.a.name === player);\r\n\r\n  if (existingplayerIndex !== -1) {\r\n    if (score > data[existingplayerIndex].b.score) {\r\n      data[existingplayerIndex].b.score = score;\r\n    }\r\n  } else {\r\n    const newplayer = {\r\n      a: { name: player },\r\n      b: { score: score },\r\n    };\r\n    data.push(newplayer);\r\n  }\r\n\r\n  data.sort((a, b) => b.b.score - a.b.score);\r\n\r\n  data.length = Math.min(data.length, 5);\r\n\r\n  const options = {\r\n    method: 'PUT',\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n    },\r\n  };\r\n\r\n  const response = await fetch(firebaseUrl, options);\r\n  const responseData = await response.json();\r\n  return responseData;\r\n}\r\n\r\nexport { getPlayersAndScore, displayPlayersAndScore, addNewPlayerAndScore };","import { Game } from \"./modules/game.js\";\r\n\r\nconst game = new Game();\r\n\r\n\r\n\r\n","import { getPlayersAndScore, displayPlayersAndScore, addNewPlayerAndScore } from './highscore.js';\r\n\r\nclass Game {\r\n\r\n  constructor() {\r\n    this.playerNameValue = '';\r\n    this.playerName = document.querySelector('#playerName');\r\n    this.displayName = document.querySelector('#displayName');\r\n    this.displayPlayerChoice = document.querySelector('#displayPlayerChoice');\r\n    this.displayComputerChoice = document.querySelector('#displayComputerChoice');\r\n    this.displayPlayerScore = document.querySelector('#displayPlayerScore');\r\n    this.displayComputerScore = document.querySelector('#displayComputerScore');\r\n    this.displayResult = document.querySelector('#displayResult');\r\n    this.displayGameResult = document.querySelector('#displayGameResult');\r\n    this.startGame = document.querySelector('#startGame');\r\n    this.buttons = [...document.querySelectorAll('.choiceButtons')];\r\n    this.playerScore = 0;\r\n    this.computerScore = 0;\r\n\r\n\r\n   this.startGame.addEventListener('click', this.welcomePlayer.bind(this));\r\n    this.buttons.forEach(button => {\r\n      button.addEventListener('click', () => this.play(button.id));\r\n    });\r\n  }\r\n\r\n  async welcomePlayer(event) {\r\n    event.preventDefault();\r\n    this.playerNameValue = this.playerName.value;\r\n    this.displayName.textContent = `Welcome, ${this.playerNameValue}!`;\r\n    this.playerName.value = '';\r\n    this.playerScore = 0;\r\n  }\r\n\r\n  async play(playerChoice) {\r\n    this.displayPlayerChoice.textContent = `Player choice: ${playerChoice}`;\r\n    const computerChoice = this.getComputerChoice();\r\n    this.displayComputerChoice.textContent = `Computer choice : ${computerChoice}`;\r\n\r\n    const result = this.getResult(playerChoice, computerChoice);\r\n    if (result === 'win') {\r\n      this.playerScore++;\r\n    } else if (result === 'lose') {\r\n      this.playerScore = 0;\r\n    }\r\n\r\n    this.displayPlayerScore.textContent = `Player score : ${this.playerScore}`;\r\n    this.displayComputerScore.textContent = `Computer score : ${this.computerScore}`;\r\n    this.displayResult.textContent = `Result: ${result}`;\r\n\r\n    if (result === 'win') {\r\n      this.displayGameResult.textContent = `${this.playerNameValue} wins!`;\r\n    } else if (result === 'lose') {\r\n      this.displayGameResult.textContent = `Computer wins!`;\r\n    }\r\n\r\n    const player = this.playerNameValue;\r\n    const score = this.playerScore;\r\n\r\n    await addNewPlayerAndScore(player, score);\r\n\r\n    const newData = await getPlayersAndScore();\r\n    displayPlayersAndScore(newData);\r\n  }\r\n\r\n  getComputerChoice() {\r\n    const choices = ['rock', 'paper', 'scissors'];\r\n    const randomIndex = Math.floor(Math.random() * choices.length);\r\n    return choices[randomIndex];\r\n  }\r\n\r\n  getResult(playerChoice, computerChoice) {\r\n    if (playerChoice === computerChoice) {\r\n      return 'draw';\r\n    } else if (playerChoice === 'rock' && computerChoice === 'scissors' ||\r\n      (playerChoice === 'paper' && computerChoice === 'rock') ||\r\n      (playerChoice === 'scissors' && computerChoice === 'paper')) {\r\n      return 'win';\r\n    } else {\r\n      return 'lose';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { Game }\r\n"],"names":["async","$1dbe79ed6ae4da18$export$9257d9e0a18b49e5","response","fetch","data","json","Object","values","$1dbe79ed6ae4da18$export$c1602fb0a70e9ef0","playerCard","document","querySelector","innerHTML","forEach","entry","card","createElement","classList","add","append","name","innerText","a","showScore","b","score","$1dbe79ed6ae4da18$export$e3389bc57abbcbe","player","existingplayerIndex","findIndex","newplayer","push","sort","length","Math","min","options","method","body","JSON","stringify","headers","then","constructor","this","playerNameValue","playerName","displayName","displayPlayerChoice","displayComputerChoice","displayPlayerScore","displayComputerScore","displayResult","displayGameResult","startGame","buttons","querySelectorAll","playerScore","computerScore","addEventListener","welcomePlayer","bind","button","play","id","event","preventDefault","value","textContent","playerChoice","computerChoice","getComputerChoice","result","getResult","choices","floor","random"],"version":3,"file":"index.670afb65.js.map"}